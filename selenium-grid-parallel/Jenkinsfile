pipeline {
    agent any

    environment {
        GRID_URL = "http://localhost:4444/wd/hub"
    }
    tools {
        maven 'Maven'
        jdk 'JAVA_HOME'
    }
    
    parameters {
        string(name: 'Branch_Name', defaultValue: 'master', description: 'Git Branch to be built')
        booleanParam(name: 'STOP_GRID_AFTER_RUN', defaultValue: false, description: 'Stop Selenium Grid after tests')
    }

    stages {
        
       
        
        stage('Log Stop Request') {
    		steps {
       			 echo "Checking if we need to stop Selenium Grid... STOP_GRID_AFTER_RUN - ${params.STOP_GRID_AFTER_RUN}"
   			 }
		}

		
        
    }

    post {
    always {
      script {
        def reportPath = "selenium-grid-parallel/target/surefire-reports/testng-results.xml"

        def parseTestNGResults = { String xmlText ->
          def parser = new XmlParser()
          def root = parser.parseText(xmlText)

          def total = root.@total as int
          def passed = root.@passed as int
          def failed = root.@failed as int
          def skipped = root.@skipped as int

          def failedTests = []
          def skippedTests = []

          root.suite.test.each { testNode ->
            testNode.class.each { classNode ->
              classNode.'test-method'.each { methodNode ->
                if (methodNode.@status == 'FAIL') {
                  failedTests << "${classNode.@name}.${methodNode.@name}"
                }
                if (methodNode.@status == 'SKIP') {
                  skippedTests << "${classNode.@name}.${methodNode.@name}"
                }
              }
            }
          }

          return [
            total: total,
            passed: passed,
            failed: failed,
            skipped: skipped,
            failedTests: failedTests,
            skippedTests: skippedTests
          ]
        }

        if (fileExists(reportPath)) {
          def xmlContent = readFile(reportPath)
          def results = parseTestNGResults(xmlContent)

          def testSummary = """
            <h2>TestNG Execution Summary</h2>
            <p>Total: ${results.total}<br>
               Passed: ${results.passed}<br>
               Failed: ${results.failed}<br>
               Skipped: ${results.skipped}</p>
            <h3>Failed Tests:</h3>
            <ul>${results.failedTests.collect { "<li>${it}</li>" }.join('')}</ul>
            <h3>Skipped Tests:</h3>
            <ul>${results.skippedTests.collect { "<li>${it}</li>" }.join('')}</ul>
          """

          emailext(
            subject: "Test Execution Report - ${currentBuild.currentResult}",
            body: testSummary + "<br><br>Full report available in Jenkins.",
            to: "venki.ralami@gmail.com",
            mimeType: 'text/html'
          )
        } else {
          echo "âš  TestNG report not found at: ${reportPath}"
        }
      }
    }
  }
    
     
}
