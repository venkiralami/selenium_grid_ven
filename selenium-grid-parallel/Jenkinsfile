
pipeline {
    agent any

    environment {
        GRID_URL = "http://localhost:4444/wd/hub"
    }
    tools {
        maven 'Maven'
        jdk 'JAVA_HOME'
    }
    
    parameters {
        string(name: 'Branch_Name', defaultValue: 'master', description: 'Git Branch to be built')
        booleanParam(name: 'STOP_GRID_AFTER_RUN', defaultValue: false, description: 'Stop Selenium Grid after tests')
    }

    stages {
        
       
        
        stage('Log Stop Request') {
    		steps {
       			 echo "Checking if we need to stop Selenium Grid... STOP_GRID_AFTER_RUN - ${params.STOP_GRID_AFTER_RUN}"
   			 }
		}
		 
         

		
        
    }

   
    
     post {
        always {
            script {
                // Read the XML file as plain text
                def xmlContent = readFile 'selenium-grid-parallel/target/surefire-reports/testng-results.xml'

                // Extract numbers using regex â€” no XmlSlurper, no sandbox approval
                def total = (xmlContent =~ /total="(\d+)"/)[0][1]
                def passed = (xmlContent =~ /passed="(\d+)"/)[0][1]
                def failed = (xmlContent =~ /failed="(\d+)"/)[0][1]
                def skipped = (xmlContent =~ /skipped="(\d+)"/)[0][1]

                // Prepare the email body
                def body = """
                TestNG Results:

                Total:   ${total}
                Passed:  ${passed}
                Failed:  ${failed}
                Skipped: ${skipped}

                Build URL: ${env.BUILD_URL}
                """

                emailext(
                    subject: "TestNG Results - Build #${env.BUILD_NUMBER}",
                    body: body,
                    to: 'your.email@example.com'
                )
            }
        }
    }
}
