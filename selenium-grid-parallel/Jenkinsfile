pipeline {
    agent any

    environment {
        GRID_URL = "http://localhost:4444/wd/hub"
    }
    tools {
        maven 'Maven'
        jdk 'JAVA_HOME'
    }
    
    parameters {
        string(name: 'Branch_Name', defaultValue: 'working_sonar_v1.0', description: 'Git Branch to be built')
        booleanParam(name: 'STOP_GRID_AFTER_RUN', defaultValue: false, description: 'Stop Selenium Grid after tests')
    }

    stages {
        stage('Check & Start Selenium Grid') {
            steps {
                script {
					dir('selenium-grid-parallel') {
                    // Check if Selenium Hub is already running
                    def hubRunning = sh(script: "curl -s ${GRID_URL} | grep 'WebDriverHub'", returnStatus: true) == 0

                    if (!hubRunning) {
                        echo "Selenium Grid not running. Starting with docker-compose..."
                        sh 'docker-compose up -d'
                        sleep 10 // Wait for hub and nodes to initialize
                    } else {
                        echo "Selenium Grid is already running. Skipping start."
                    }
                    }
                }
            }
        }
        
		stage('Checkout') {
            steps {
                git branch: "${params.Branch_Name}",
                    url: 'https://github.com/venkiralami/selenium_grid_ven.git',
                    credentialsId: 'GitHubCredsId'
            }
        }

        stage('Build & Test') {
            steps {
                dir('selenium-grid-parallel') {
                    sh 'mvn clean test'
                }
            }
        }
        
        stage('Stop Selenium Grid') {
            when {
                expression { return params.STOP_GRID_AFTER_RUN == true }
            }
            steps {
				dir('selenium-grid-parallel') {
                sh 'docker-compose down'
                }
            }
        }
    }

   
    
     post {
        always {
            script {
                // Read TestNG report (summary only)
                def reportPath = "selenium-grid-parallel/target/surefire-reports/testng-results.xml"
                def testSummary = sh(script: """
                    passed=\$(grep -o 'pass="[^"]*"' ${reportPath} | cut -d '"' -f2)
                    failed=\$(grep -o 'fail="[^"]*"' ${reportPath} | cut -d '"' -f2)
                    skipped=\$(grep -o 'skip="[^"]*"' ${reportPath} | cut -d '"' -f2)
                    echo "<h2>TestNG Execution Summary</h2>
                          <p>Passed: \$passed<br>Failed: \$failed<br>Skipped: \$skipped</p>"
                """, returnStdout: true).trim()

                emailext(
                    subject: "Test Execution Report - ${currentBuild.currentResult}",
                    body: "${testSummary}<br><br>Full report is available in Jenkins.",
                    to: "venki.ralami@gmail.com",
                    mimeType: 'text/html'
                )
            }
        }
    }
}
